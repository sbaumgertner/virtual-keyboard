{"version":3,"file":"script.js","mappings":";;;;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;UC5BA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACN4D;AAC1B;AAClC;AACA;AACA;AACA;AACA;AACA,uBAAuB,2CAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,8CAAI;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjLA","sources":["webpack://virtual-keyboard/./src/js/Key.js","webpack://virtual-keyboard/webpack/bootstrap","webpack://virtual-keyboard/webpack/runtime/define property getters","webpack://virtual-keyboard/webpack/runtime/hasOwnProperty shorthand","webpack://virtual-keyboard/webpack/runtime/make namespace object","webpack://virtual-keyboard/./src/index.js","webpack://virtual-keyboard/./src/sass/style.scss"],"sourcesContent":["export class Key {\r\n    constructor (src){\r\n        this.keyCode = src.keyCode;\r\n        this.code = src.code;\r\n        this.en = src.en;\r\n        this.ru = src.ru;\r\n        this.special = src.special;\r\n    }\r\n\r\n    generateHTML() {\r\n        let key = document.createElement('div');\r\n        key.className = 'key' + (this.special ? ' special' : '')  + ' ' + this.code.toLowerCase();\r\n        key.setAttribute('data-code', this.code);\r\n\r\n        key.innerHTML = '<div class=\"en\">' +\r\n                '<span class=\"regular\">' + this.en.key + '</span>' +\r\n                '<span class=\"shift hidden\">' + this.en.shift + '</span>' +\r\n                '<span class=\"caps hidden\">' + this.en.caps + '</span>' +\r\n                '<span class=\"caps-shift hidden\">' + this.en.shift_caps + '/span>' +\r\n            '</div>' +\r\n            '<div class=\"ru hidden\">' +\r\n                '<span class=\"regular\">' + this.ru.key + '</span>' +\r\n                '<span class=\"shift hidden\">' + this.ru.shift + '</span>' +\r\n                '<span class=\"caps hidden\">' + this.ru.caps + '</span>' +\r\n                '<span class=\"caps-shift hidden\">' + this.ru.shift_caps + '</span>' +\r\n            '</div>';\r\n        return key;\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import keys from './js/keyboard.json' assert {type: 'json'};\r\nimport { Key } from './js/Key.js';\r\n\r\nfunction generateRow (keysArray){\r\n    let row = document.createElement('div');\r\n    row.className = 'keyboard__row';\r\n    for (let keyData of keysArray){\r\n        let key =  new Key(keyData);\r\n        row.appendChild(key.generateHTML());\r\n    }\r\n    return row;\r\n}\r\n\r\nfunction generateKeyboard(data){\r\n    let keyboard = document.createElement('div');\r\n    keyboard.className = 'keyboard';\r\n    for (let dataRow of data){\r\n        keyboard.appendChild(generateRow(dataRow));\r\n    }\r\n    return keyboard;\r\n}\r\n\r\nfunction generateDocument(){\r\n    let wrapper = document.createElement('div');\r\n    wrapper.className = 'wrapper';\r\n    wrapper.innerHTML = '<h1 class=\"h1\">Virtual keyboard</h1>' +\r\n    '<textarea class=\"keyboard-input\"></textarea>';\r\n    wrapper.appendChild(generateKeyboard(keys));\r\n\r\n    let os = document.createElement('p');\r\n    os.className = 'os-info';\r\n    os.innerHTML = 'Created in the Windows OS';\r\n    wrapper.appendChild(os);\r\n\r\n    let lang = document.createElement('p');\r\n    lang.className = 'lang-info';\r\n    lang.innerHTML = 'Switch language: left ctrl + alt';\r\n    wrapper.appendChild(lang);\r\n\r\n    document.body.appendChild(wrapper);\r\n}\r\n\r\nlet onLang;\r\nlet offLang;\r\nlet pressed = new Set();\r\nlet mousePressed = '';\r\nlet cursorPosition = -1;\r\n\r\nwindow.addEventListener('beforeunload', setLocalStorage);\r\nwindow.addEventListener('load', init);\r\n\r\nfunction init(event){\r\n    getLocalStorage();\r\n    generateDocument();\r\n    initLang();\r\n    addEventListeners();\r\n}\r\n\r\nfunction setLocalStorage() {\r\n    localStorage.setItem('lang', onLang);\r\n}\r\n\r\nfunction getLocalStorage() {\r\n    if (localStorage.getItem('lang')) {\r\n        onLang = localStorage.getItem('lang');\r\n    }\r\n    else onLang = 'en';\r\n    onLang == 'en' ? offLang = 'ru' : offLang = 'en';\r\n}\r\n\r\nfunction initLang(){\r\n\r\n    let onArr = document.querySelectorAll('.' + onLang);\r\n    for (let item of onArr){\r\n        item.classList.remove('hidden');\r\n    }\r\n    let offArr = document.querySelectorAll('.' + offLang);\r\n    for (let item of offArr){\r\n        item.classList.add('hidden');\r\n    }\r\n}\r\n\r\nfunction changeLang(){\r\n    let tmp = onLang;\r\n    onLang = offLang;\r\n    offLang = tmp;\r\n    initLang();\r\n}\r\n\r\nfunction addEventListeners(){\r\n    document.addEventListener('keydown', function(event) {\r\n        let keyClass = event.code.toLowerCase();\r\n        let keyEl = document.querySelector('.' + keyClass);\r\n        keyEl.classList.add('light');\r\n        pressed.add(event.code);\r\n        if (pressed.has('ControlLeft') && pressed.has('AltLeft')){\r\n            changeLang();\r\n        }\r\n        if (document.activeElement != document.querySelector('.keyboard-input')){\r\n            addInput(keyEl);\r\n        }\r\n        else {\r\n            cursorPosition += 1;\r\n        }\r\n      });\r\n    \r\n      document.addEventListener('keyup', function(event) {\r\n        let keyClass = event.code.toLowerCase();\r\n        let keyEl = document.querySelector('.' + keyClass);\r\n        keyEl.classList.remove('light');\r\n        pressed.delete(event.code);\r\n      });\r\n    \r\n      document.querySelector('.keyboard').addEventListener('mousedown', function(event) {\r\n        let keyEl = event.target.closest('.key');\r\n        if (keyEl){\r\n            keyEl.classList.add('light');\r\n            pressed.add(keyEl.dataset.code);\r\n            mousePressed = keyEl.dataset.code;\r\n            if (pressed.has('ControlLeft') && pressed.has('AltLeft')){\r\n                changeLang();\r\n            }\r\n            addInput(keyEl);\r\n        }\r\n      });\r\n\r\n      document.addEventListener('mouseup', function(event) {\r\n        if (mousePressed){\r\n            let keyEl = document.querySelector('.' + mousePressed.toLowerCase());\r\n            keyEl.classList.remove('light');\r\n            pressed.delete(keyEl.dataset.code);\r\n            mousePressed = '';\r\n        }\r\n      });\r\n\r\n      document.querySelector('.keyboard-input').addEventListener('click', function(event) {\r\n        let input = document.querySelector('.keyboard-input');\r\n        cursorPosition = input.selectionStart;\r\n        console.log('set pos = ' + cursorPosition);\r\n      });\r\n}\r\n\r\nfunction addInput(keyEl){\r\n    if (keyEl.classList.contains('special')){\r\n        return;\r\n    }\r\n    let lang = keyEl.querySelector('.' + onLang);\r\n    let shift = pressed.has('ShiftLeft') || pressed.has('ShiftRight');\r\n    let caps = pressed.has('CapsLock');\r\n    let key = '';\r\n    if (!shift && !caps){\r\n        key = lang.querySelector('.regular');\r\n    }\r\n    else if (shift && !caps){\r\n        key = lang.querySelector('.shift');\r\n    }\r\n    else if (!shift && caps){\r\n        key = lang.querySelector('.caps');\r\n    }\r\n    else {\r\n        key = lang.querySelector('.caps-shift');\r\n    }\r\n    let input = document.querySelector('.keyboard-input');\r\n    console.log(cursorPosition);\r\n\r\n    if (cursorPosition < 0 || cursorPosition >= input.value.length){\r\n        input.value = input.value + key.textContent;\r\n        cursorPosition = input.value.length;\r\n    }\r\n    else {\r\n        input.value = input.value.substring(0, cursorPosition) + \r\n        key.textContent + input.value.substring(cursorPosition);\r\n        cursorPosition += 1;\r\n    }\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":[],"sourceRoot":""}